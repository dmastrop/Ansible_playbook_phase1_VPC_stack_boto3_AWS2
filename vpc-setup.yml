- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup
      # the hierarchy is bastion_setup and vpc_setup var files are in /var directory. The files do not have to be in a separate file.
      # always preferable to use vars files so that the code (below for example) is fully reusable across different implementations
    

    - name: Create vprofile VPC task
      ec2_vpc_net:
      # this is the module to create the VPC networks. variables always use the double {{}} syntax to reference them
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_net_module.html

        name: "{{vpc_name}}"
        # vpc_name is from the vpc_setup vars file
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"

      register: vpcoutvariable
      # this registers this module's contents as variable vpcoutvariable so that we can reference it in other modules


    - debug:
        var: vpcoutvariable
        # this debug module task will output the module's contents to the terminal 


    - name: Create PublicSubnet 1 in Zone 1
      ec2_vpc_subnet:
      # this module is used to create subnets in the VPC
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
        vpc_id: "{{vpcoutvariable.vpc.id}}"
        # reference to the above module
        region: "{{region}}"
        az: "{{zone1}}"
        # zone is not supported. It is called az for availability zone now.
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        # all of these variables are assigned values in var/vpc_setup
        map_public: yes
        # map_public will map a public ip address to the subnet.  For public we need this for routing out to the internet
        resource_tags: 
          Name: vprofile-pubsub1

      register: pubsub1_out_variable


    - debug:
        var: pubsub1_out_variable
        # this debug module task will output the public subnet1 module's contents to the terminal 


    - name: Create PublicSubnet 2 in Zone 2
      ec2_vpc_subnet:
      # this module is used to create subnets in the VPC
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
        vpc_id: "{{vpcoutvariable.vpc.id}}"
        # reference to the above module
        region: "{{region}}"
        az: "{{zone2}}"
        # zone is not supported. It is called az for availability zone now.
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        # all of these variables are assigned values in var/vpc_setup
        map_public: yes
        # map_public will map a public ip address to the subnet.  For public we need this for routing out to the internet
        resource_tags: 
          Name: vprofile-pubsub2

      register: pubsub2_out_variable


    - name: Create PublicSubnet 3 in Zone 3
      ec2_vpc_subnet:
      # this module is used to create subnets in the VPC
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
        vpc_id: "{{vpcoutvariable.vpc.id}}"
        # reference to the above module
        region: "{{region}}"
        az: "{{zone3}}"
        # zone is not supported. It is called az for availability zone now.
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        # all of these variables are assigned values in var/vpc_setup
        map_public: yes
        # map_public will map a public ip address to the subnet.  For public we need this for routing out to the internet
        resource_tags: 
          Name: vprofile-pubsub3

      register: pubsub3_out_variable


    - name: Create PrivateSubnet 1 in Zone 1
      ec2_vpc_subnet:
      # this module is used to create subnets in the VPC
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
        vpc_id: "{{vpcoutvariable.vpc.id}}"
        # reference to the above module
        region: "{{region}}"
        az: "{{zone1}}"
        # zone is not supported. It is called az for availability zone now.
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        # all of these variables are assigned values in var/vpc_setup
        map_public: yes
        # map_public will map a public ip address to the subnet.  For public we need this for routing out to the internet
        resource_tags: 
          Name: vprofile-privsub1

      register: privsub1_out_variable


    - name: Create PrivateSubnet 2 in Zone 2
      ec2_vpc_subnet:
      # this module is used to create subnets in the VPC
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
        vpc_id: "{{vpcoutvariable.vpc.id}}"
        # reference to the above module
        region: "{{region}}"
        az: "{{zone2}}"
        # zone is not supported. It is called az for availability zone now.
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        # all of these variables are assigned values in var/vpc_setup
        map_public: yes
        # map_public will map a public ip address to the subnet.  For public we need this for routing out to the internet
        resource_tags: 
          Name: vprofile-privsub2

      register: privsub2_out_variable


    - name: Create PrivateSubnet 3 in Zone 3
      ec2_vpc_subnet:
      # this module is used to create subnets in the VPC
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
        vpc_id: "{{vpcoutvariable.vpc.id}}"
        # reference to the above module
        region: "{{region}}"
        az: "{{zone3}}"
        # zone is not supported. It is called az for availability zone now.
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        # all of these variables are assigned values in var/vpc_setup
        map_public: yes
        # map_public will map a public ip address to the subnet.  For public we need this for routing out to the internet
        resource_tags: 
          Name: vprofile-privsub3

      register: privsub3_out_variable



